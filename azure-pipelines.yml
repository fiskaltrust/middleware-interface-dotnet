resources:
  - repo: self

trigger:
  batch: true
  branches:
    include:
      - master
      - refs/tags/*

pr:
  - master

variables:
  - group: 'Code Signing Certificates'
  - name: BuildConfiguration
    value: release
  - name: BuildPlatform
    value: any cpu
  - name: Solution
    value: 'fiskaltrust.Middleware.Interface.sln'

jobs:
  - job: Build
    pool:
      vmImage: windows-latest
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core 6.0'
        inputs:
          packageType: 'sdk'
          version: '6.0.x'

      - task: VisualStudioTestPlatformInstaller@1
        displayName: VsTest Platform Installer

      - task: yavt@1
        inputs:
          mode: 'Multi'
          semverVersion: 'v1'

      - task: DotNetCoreCLI@2
        displayName: Restore
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
          feedsToUse: 'select'
          vstsFeed: 'dev'   # TODO Remove before merge

      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          projects: '$(Solution)'
          arguments: '--configuration $(BuildConfiguration)'

      - task: codesigning@2
        displayName: 'Code Signing '
        inputs:
          secureFileId: 'codesigning.pfx'
          signCertPassword: '$(Code_Signing_Password)'
          filePaths: |
            **/fiskaltrust*.dll
            **/fiskaltrust*.exe
      
      # Test for all target frameworks
      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-net461.xml -f net461
        displayName: 'dotnet test ifPOS - net461'
        workingDirectory:  'test\fiskaltrust.ifPOS.Tests'
        continueOnError: true

      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-net6.xml -f net6.0
        displayName: 'dotnet test ifPOS - net6.0'
        workingDirectory:  'test\fiskaltrust.ifPOS.Tests'
        continueOnError: true

      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-netstandard21.xml -f netstandard2.1
        displayName: 'dotnet test ifPOS - netstandard2.1'
        workingDirectory:  'test\fiskaltrust.ifPOS.Tests'
        continueOnError: true
      
      # Client tests
      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults.xml
        displayName: 'dotnet test Clients'
        workingDirectory:  'test\fiskaltrust.Middleware.Interface.Client.Tests'
      
      # Additional tests for fiskaltrust.Middleware.Interface.Tests
      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-net461.xml -f net461
        displayName: 'dotnet test Interface - net461'
        workingDirectory:  'test\fiskaltrust.Middleware.Interface.Tests'
        continueOnError: true

      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-net6.xml -f net6.0
        displayName: 'dotnet test Interface - net6.0'
        workingDirectory:  'test\fiskaltrust.Middleware.Interface.Tests'
        continueOnError: true

      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-netstandard21.xml -f netstandard2.1
        displayName: 'dotnet test Interface - netstandard2.1'
        workingDirectory:  'test\fiskaltrust.Middleware.Interface.Tests'
        continueOnError: true
      
      # Run serialization tests specifically
      - script: dotnet test --no-build --configuration $(buildConfiguration) --test-adapter-path:. --logger:nunit;LogFilePath=TestResults-serialization.xml -f netstandard2.1 --filter "FullyQualifiedName~SerializationTests"
        displayName: 'Run Serialization Tests - netstandard2.1'
        workingDirectory:  'test\fiskaltrust.Middleware.Interface.Tests'
        continueOnError: true

      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFormat: NUnit
          testResultsFiles: '**/*TestResults*.xml'
          mergeTestResults: true
          failTaskOnFailedTests: true
          buildConfiguration: $(buildConfiguration)

      - task: DotNetCoreCLI@2
        displayName: dotnet pack
        inputs:
          command: 'pack'
          packagesToPack: 'src/**/*.csproj'
          nobuild: true
          versioningScheme: 'off'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'